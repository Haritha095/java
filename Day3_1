public class Student {
    static   /*static block just called once in a program*/
    {
        System.out.println("Please find the student's result at the bottom");
    }
    String name;
    int rollno;
    int mark;
    String res;
    static String Sub="Maths"; /*Static variable since subject is common to all the entries here which can be allocated memory once and used where required*/
    static int id=1; /*static int id being initialised with one and incremented accordingly*/
    Student(String name,int mark)
    {
    this.name=name;
    this.mark=mark;
    rollno=id++; /*incremented*/
    }

    public void display()
    {
        System.out.println("The details as follow:"+"\nName "+name+"\nRoll no:"+rollno+"\nMark:"+mark);
    }
    public void result()
    {

        if(mark>40 && mark<=60) /*if else loop*/
        {
            System.out.println(name+" has passed the examination with C grade");

        }
        else if(mark>=61 && mark<80)
        {
            System.out.println(name+" has passed the examination with B grade");
        }
        else if(mark>=81 && mark<101)
        {
            System.out.println(name+" has passed the examination with A grade");

        }
        else if(mark>100){
            System.out.println("Not applicable or Invalid");
        }
        else{
            System.out.println(name+" has failed the examination");
        }}
        static void topper()/*static method being called in main with just method and class name no object created*/
        {
            System.out.println("Subject-Maths");
            }
    }

public class School {
    public static void main(String args[])
    {
        Student s1=new Student("Hari",87);
        Student s2=new Student("Ammu",98);
        Student s3=new Student("Malu",23);
        Student s4=new Student("Priya",102);
        s1.display();
        s2.display();
        s3.display();
        s4.display();
        s1.result();
        s2.result();
        s3.result();
        s4.result();
        Student.topper();/*Static method called*/
    }
}
